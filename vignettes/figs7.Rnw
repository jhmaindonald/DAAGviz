\documentclass[12pt, a4paper,  BCOR=8.25mm, DIV=15]{scrartcl}
\usepackage[utf8]{inputenc}
\usepackage{newfloat}
\DeclareFloatingEnvironment[name={Supplementary Figure}]{suppfigure}

\newenvironment{itemizz}%
  {\begin{itemize}%
    \setlength{\itemsep}{2pt}%
    \setlength{\parskip}{2pt}}%
  {\end{itemize}}

\newcommand{\txtt}[1]{{\texttt{#1}}}

\begin{document}
%\VignetteEngine{knitr::knitr}
%\VignetteIndexEntry{Graphics (Set 7)}

<<setup, cache=FALSE, echo=FALSE, purl=FALSE>>=
library(knitr)
options(replace.assign=FALSE,width=72)
opts_chunk$set(fig.path='figs/gph-', cache.path='cache/gph-',
               fig.align='center', dev='pdf', fig.width=3.5,
               fig.height=3.5, fig.show='hold', par=TRUE,
               tidy=FALSE,  comment=NA)
knit_hooks$set(par=function(before, options, envir){
if (before && options$fig.show!='none') par(mar=c(4,4,1.6,.1),
              cex.lab=.95,cex.axis=.9,mgp=c(2,.7,0),tcl=-.3)
}, crop=knitr::hook_pdfcrop)
pdf.options(pointsize=12)
oldopt <- options(digits=4)
@ %

\title{7: Graphics}
\author{John H Maindonald}
\maketitle

\vspace*{-1cm}

<<doFigs>>=
doFigs <- FALSE
@ %

<<fig7_1>>=
fig7.1 <- function(){
## ---- brain-body ----
plot(Brainwt ~ Bodywt, xlim=c(0, 300),
     ylim=c(0,1500), data=primates,
     xlab="Body weight (kg)",
     ylab="Brain weight (g)")
# Specify xlim to allow room for the labels
with(primates,
     text(Brainwt ~ Bodywt,
          labels=rownames(primates), pos=4))
# pos: pos=1 (below), 2 (left), 3 (above)
}
@ %

<<supp7_1>>=
supp7.1 <- function(){
if(!require(RColorBrewer))stop("RColorBrewer must be installed")
## ---- col-plots ----
opt <- options(width=75)
colpal <- rev(list(
    "Default palette" = palette()[1:8],  cm.colors = cm.colors(12),
    terrain.colors = terrain.colors(12), heat.colors = heat.colors(12),
    blueRamp = colorRampPalette(c(blues9, "white"))(12),
    "Brewer-Set1" = brewer.pal(8, "Set1"),
    "Brewer-Dark2" = brewer.pal(8, "Dark2")))
palnam <- names(colpal)
plot(1, 1, xlim=c(0.5,12.5), ylim=c(0,length(palnam)+0.5), type="n",
     axes=FALSE, xlab="", ylab="")
for(i in 1:length(palnam)){
    len <- length(colpal[[i]])
    points(1:len, rep(i,len), pch=15, col=colpal[[i]], cex=5.5)
    legend(1, i+0.025, palnam[i], adj=0, box.col="white", bg="white",
           x.intersp=0, y.intersp=0, yjust=0)
}
options(opt)
}
@ %

<<fig7_2>>=
fig7.2 <- function(){
## ---- alpha-ex ----
## Sample from the 15992 rows
dfsamp <- cps1[sample(nrow(cps1), 3000), ]
plot(re78 ~ re75, data=dfsamp, pch=20, cex=0.5,
     col="black")
mtext(side=3, line=0.5, "A: 100% opacity", adj=0)
plot(re78 ~ re75, data=dfsamp, pch=20, cex=0.5,
     col=adjustcolor("black", alpha=0.4))
mtext(side=3, line=0.5, "B: 40% opacity", adj=0)
blueRamp <- colorRampPalette(c("white", blues9))
with(dfsamp, smoothScatter(re75~re74,
                           colramp=blueRamp))
mtext(side=3, line=0.5, "C: Color density plot",
      adj=0)
}
@ %

<<fig7_3>>=
fig7.3 <- function(){
## ---- aspect ----
plot((1:30)*0.92, sin((1:30)*0.92),
     xlab="", ylab="")
}
@ %

<<supp7_2>>=
supp7.2 <- function(){
## ---- Animals-body-brain ----
## Supplementary figure 7.2
library(MASS)
oldpar <- par(pch=16, pty="s", mfrow=c(2,2))
with(Animals, {      # bracket several R statements
  plot(body, brain)
  plot(sqrt(body), sqrt(brain))
  plot(body^0.1, brain^0.1)
  plot(log(body), log(brain))
})                   # close both sets of brackets
par(oldpar)          # Restore former settings
}
@ %

<<fig7_4>>=
fig7.4 <- function(){
## ---- poss-hist ----
ftotlen <- subset(possum, sex=="f")[, "totlngth"]
## Left panel: breaks at 72.5, 77.5,..
hist(ftotlen, breaks = 72.5 + (0:5)*5, freq=FALSE,
     xlab="Total length", ylim=c(0,0.11),
     main ="A: Breaks at 72.5, 77.5,...")
## Now superimpose a density curve, as in Fig. 7.3
lines(density(ftotlen))
##
## Panel B: breaks at 75, 80, ...
hist(ftotlen, breaks = 75 + (0:5)*5, freq=FALSE,
     xlab="Total length", ylim=c(0,0.11),
     main="B: Breaks at 75, 80, ...")
}
@ %

<<supp7_3>>=
supp7.3 <- function(){
## ---- fposs-density ----
## Supplementary figure 7.3
with(subset(possum, sex=="f"),
     plot(density(totlngth), type="l"))
}
@ %

<<fig7_5>>=
fig7.5 <- function(){
## ---- boxplot ----
## Code
with(subset(possum, sex=="f"),
     {boxplot(totlngth, horizontal=TRUE)
      rug(totlngth)} )
}
@ %

<<fig7_6>>=
fig7.6 <- function(){
## ---- possum-qqn ----
ftotlen <- subset(possum, sex == "f")[, "totlngth"]
ylabel <- expression(bold("Data"))
xy <- qqnorm(ftotlen, xlab="", ylab=ylabel)
usr <- par()$usr
fillcol <- adjustcolor("gray60", alpha=0.2)
rect(usr[1], usr[3],
     usr[2], usr[4], col=fillcol)
for(i in 1:7) qqnorm(rnorm(43), xlab="",
                     ylab="Simulated",
                     main="Q-Q: Simulated")
# rnorm() generates random samples from a normal
# distribution with, by default, mean 0 and SD=1.
}
@ %

<<fig7_7>>=
fig7.7 <- function(){
## ---- plot-expr ----
yl <- expression("Area = " * pi * r^~2)
plot(1:5, pi*(1:5)^2, xlab="Radius (r)", ylab=yl)
}
@ %

<<fig7_8>>=
fig7.8 <- function(){
## ---- cline-gph ----
## On the command line: Create and print object
xyplot(Brainwt ~ Bodywt, data=primates)
}

<<fig7_9>>=
fig7.9 <- function(){
## ---- rowSwim ----
xyplot(ht ~ wt | sport, groups=sex, data=ais,
       par.settings=simpleTheme(pch=c(4,1)),
       scales=list(tck=0.5),
       auto.key=list(space="right"),
       subset=sport%in%c("Row","Swim"))
}
@ %

<<fig7_10>>=
fig7.10 <- function(){
## ---- grog-simple ----
## Simple version of plot
grogplot <- xyplot(
              Beer+Spirit+Wine ~ Year | Country,
              data=grog, outer=FALSE,
              auto.key=list(space="right"))
## ---- grog-update ----
## Update trellis object, then print
ylab <- "Amount consumed (per person)"
parset <- simpleTheme(pch=c(1,3,4))
finalplot <- update(grogplot, ylim=c(0,5.5),
                     xlab="", ylab=ylab,
                     par.settings=parset)
print(finalplot)
}
@ %

<<fig7_11>>=
fig7.11 <- function(){
## ---- strip-grob ----
library(grid)
plotnam <- "Stripplot of cuckoo data"
stripplot(species ~ length, xlab="", data=cuckoos,
  legend=list(top=list(fun=textGrob,
                       args=list(label=plotnam,
                                 x=0))))
}
@ %

<<fig7_12>>=
fig7.12 <- function(){
## ---- jobs-basic ----
## 1. Create a basic version of the graphics object
jobsB.xyplot <-
  xyplot(Ontario+Quebec+BC+Alberta+Prairies+Atlantic ~ Date,
         data=jobs, type="b", layout=c(3,2), outer=TRUE,
         ylab="Number of jobs",
         scales=list(y=list(relation="sliced", log=TRUE)))
## ---- jobs-enhance ----
## 2. Code for the enhancements to jobsB.xyplot
ylabpos <- exp(pretty(log(unlist(jobs[,-7])), 100))
ylabels <- paste0(round(ylabpos),"\n(", log(ylabpos), ")")
## Create a date object 'startofmonth'; use instead of 'Date'
atdates <- seq(from=95, by=0.5, length=5)
datelabs <- format(seq(from=as.Date("1Jan1995", format="%d%b%Y"),
                       by="6 month", length=5), "%b%y")
update(jobsB.xyplot, xlab="", between=list(x=0.5, y=0.5),
       scales=list(x=list(at=atdates, labels=datelabs),
                   y=list(at=ylabpos, labels=ylabels), tck=0.6) )
}
@ %

<<fig7_13>>=
fig7.13 <- function(){
## ---- strip-bw ----
stripplot(species ~ length, data=cuckoos,
          xlab="Cuckoo egg length (mm)")
bwplot(species ~ length, data=cuckoos,
       xlab="Cuckoo egg length (mm)")
}
@ %

<<fig7_14>>=
fig7.14 <- function(){
## ---- lattice-density ----
## Code
colset <- c("gray","black")
densityplot(~ earconch | sex, groups=Pop,
            data=possum,
            par.settings=simpleTheme(col=colset),
            auto.key=list(space="right"))
}
@ %

<<fig7_15>>=
fig7.15 <- function(){
## ---- gph-from ----
gph <- xyplot(Brainwt ~ Bodywt,  data=primates,
              xlim=c(0,300))
## ---- my-panel ----
my.panel <- function(x,y){
  panel.xyplot(x,y)
  panel.text(x,y, labels=rownames(primates), pos=4)
}
update(gph, panel=my.panel)
}
@ %

<<fig7_16>>=
fig7.16 <- function(){
print(c("The Figure 7.16 screen display was obtained using the playwith GUI.",
        "See text for details."), quote=FALSE)
}
@ %

<<fig7_17>>=
fig7.17 <- function(){
## ---- qplot-smooth ----
## Default loess smooth, with SE bands added.
quickplot(Year, mdbRain, data=bomregions2015,
          geom=c("point","smooth"), xlab="",
          ylab="Av. rainfall , M-D basin")
}
@ %

<<fig7_18>>=
fig7.18 <- function(){
## ---- overlay-dens-simple ----
## Overlay with boxplots and density contours
ggplot2::quickplot(wt, ht, data=DAAG::ais,
          geom=c("boxplot", "point", "density2d"),
          facets = . ~ sex)
}
@ %

<<supp7_4>>=
supp7.4 <- function(){
## ---- twenty5080 ----
## Supplementary figure 4
quickplot(Year, mdbRain, data=bomregions2015) +
  geom_quantile(formula = y ~ ns(x,5),
                quantiles=c(0.2,0.5,0.8) )
}
@ %

<<fig7_19>>=
fig7.19 <- function(){
## ---- aisRS ----
## Extract from ais data for rowers and swimmers
aisRS <- subset(DAAG::ais, sport %in% c("Row","Swim"))
aisRS$sport <- droplevels(aisRS$sport)
ggplot2::ggplot(aisRS) +
  ggplot2::geom_point(aes(wt, ht,
             color=sex,
             shape=sport),
             size=2)
}
@ %

<<figset_7>>=
figset7 <- function(){
  if(!require(DAAG, quietly=TRUE))stop('DAAG must be installed')
  if(!require(MASS, quietly=TRUE))stop('MASS must be installed')
  if(!require(latticeExtra, quietly=TRUE))stop('latticeExtra must be installed')
  if(!require(ggplot2, quietly=TRUE))stop('ggplot2 must be installed')
  if(!require(splines, quietly=TRUE))stop('splines must be installed')
  if(!require(quantreg, quietly=TRUE))stop('quantreg must be installed')
  if(!require(RColorBrewer, quietly=TRUE))stop('RColorBrewer must be installed')
  }
@ %

<<do-figset7>>=
figset7()
@ %


\begin{figure}[ht]
<<fig7_1e, fig.width=4, fig.height=4.25, top=2, rt=2, crop=TRUE, out.width="0.47\\textwidth">>=
fig7.1()
@ %
\caption{Plot of brain weight against body weight, for selected
primates.}\label{fig:primates}
\end{figure}

\begin{suppfigure}[ht]
<<supp7_1e, fig.width=7.5, fig.height=7, cache=FALSE, crop=TRUE, out.width="0.75\\textwidth">>=
supp7.1()
@ %
\caption{Color palettes.}\label{fig:colpal}
\end{suppfigure}

\begin{figure}[ht]
<<fig7_2e, dev='png', fig.width=2.5, fig.height=2.75, top=2, out.width="0.32\\textwidth">>=
fig7.2()
@ %
\caption{In Panel A, points are plotted with the 100\% opacity, i.e.,
  no transparency. In Panel B, \txtt{alpha=0.4}, i.e., 40\% opacity.
  Panel C uses the function \txtt{smoothScatter()} to show a smoothed
  color density representation of the data.
  \label{fig:alpha}.}
\end{figure}

\begin{figure}[ht]
<<fig7_3e, fig.width=8, fig.height=2.4, top=1, out.width="0.9\\textwidth">>=
par(fig=c(0,0.265, 0,1))
fig7.3()
mtext(side=3, line=0.5, "A: 1:1 aspect ratio", adj=0)
par(fig=c(0.265, 1, 0,1), new=TRUE)
fig7.3()
mtext(side=3, line=0.5, "B: 1:3.5 aspect ratio", adj=0)
@ %
\caption{Both figures show the same data, but with widely different
  aspect ratios.\label{fig:aspect}}
\end{figure}

\begin{figure}[ht]
<<fig7_4e, eval=doFigs, fig.width=3.25, fig.height=3.25, left=1, rt=1, bot=2, top=2, out.width="0.47\\textwidth", eval=doFigs>>=
fig7.4()
@ %
\caption{The two panels show the same data, but with a different
choice of breakpoints.\label{fig:densitybreaks}}
\end{figure}

\begin{suppfigure}
<<supp7_3e, out.width="0.47\\textwidth">>=
supp7.3()
@ %
\caption{Density plot for lengths of female possums.}
\end{suppfigure}

\clearpage


\begin{figure}[ht]
<<fig7_5e, eval=doFigs, fig.width=3.5, fig.height=2.5, bot=1, out.width="0.42\\textwidth">>=
fig7.5()
@ %
\vspace*{-18pt}

\caption{Distribution of lengths of female possums.
The bars (together making up a 'rug') show actual data values.\label{fig:boxrugs}}
\end{figure}

\begin{figure}[ht]
<<fig7_6e, fig.width=4, fig.height=4, top=1, bot=1, rt=1, out.width="0.24\\textwidth">>=
fig7.6()
@ %
\vspace*{-12pt}

      \caption{Normal probability plots. The top left panel shows the 43 lengths
of female possums. Other panels are for independent normal
random samples of size 43.\label{fig:np-plots}}
\end{figure}

\begin{figure}[ht]
\vspace*{-6pt}
<<fig7_7e, eval=doFigs, fig.width=3.5, fig.height=3.5, out.width="0.47\\textwidth">>=
fig7.7()
@ %
\caption{A mathematical expression is included as part of the
  $y$-axis label.\label{fig:area}.}
\end{figure}

\begin{figure}[ht]
<<fig7_8e, fig.width=3.5, fig.height=3.5, out.width="0.47\\textwidth">>=
fig7.8()
@ %
\caption{Use of lattice function \txtt{xyplot()} to give a graph.
  \label{fig:lat-gph}}
\end{figure}

\begin{figure}[ht]
<<fig7_9e, fig.width=6, fig.height=3.5, out.width="0.8\\textwidth">>=
fig7.9()
@ %
\caption{Height (\texttt{ht}) versus Weight (\texttt{wt}), for
        rowers (\texttt{Row}) and swimmers (\texttt{Swim}).
        Different plotting symbols are used to distinguish males from
        females.}\label{fig:lattice-ais}
\end{figure}

\begin{figure}[ht]
<<fig7_10e, fig.width=6, fig.height=3.25, out.width="0.8\\textwidth">>=
fig7.10()
@ %
\caption{Australian and New Zealand apparent per person annual
  consumption (in liters) of the pure alcohol content of liquor products, for
  1998 to 2006.\label{fig:allgrog}}
\end{figure}

\begin{figure}[ht]
<<fig7_11e, fig.width=3.5, fig.height=2.5, out.width="0.47\\textwidth", cache=FALSE>>=
fig7.11()
@ %
\caption{The argument \txtt{legend} has been used to add text,
  supplied as a 'grob'.\label{fig:textGrob}}
\end{figure}

\begin{figure}[ht]
<<fig7_12e, fig.width=8.5, fig.height=4, out.width="0.97\\textwidth">>=
fig7.12()
@ %
\caption{Jobs growth in Canadian provinces, between January 1995
  and December 1996.}\label{fig:jobsplot}
\end{figure}

\begin{figure}[ht]
<<fig7_13e-strip-bw, fig.width=3.5, fig.height=2.5, cache=FALSE, out.width="0.47\\textwidth">>=
<<strip-bw>>
@ %
\caption{A stripplot and a dotplot, side by side for comparison.}
\end{figure}

\begin{figure}[ht]
<<fig7_14e, fig.width=6, fig.height=3.15, out.width="0.8\\textwidth">>=
fig7.14()
@ %
\caption{Lattice style density plot comparing possum earconch
    measurements, separately for males and females, between Victorian
    and other populations. Observe that the scatter of data values is
shown along the horizontal axis.}\label{fig:possumdens}
\end{figure}

\begin{figure}[ht]
<<fig7_15e, fig.width=3.5, fig.height=3.5, out.width="0.47\\textwidth">>=
fig7.15()
@ %
\caption{Here, labels have been added to the points. This can be
  done by updating a graph that has the points, by use of a panel
  function that both plots points and and adds labels, or by adding a
  new layer to a graph that shows the points.}\label{fig:layer}
\end{figure}

\addtocounter{figure}{1}

\begin{figure}[ht]
<<fig7_17e, fig.width=5.5, fig.height=3.25, out.width="0.8\\textwidth", warning=FALSE>>=
fig7.17()
@ %
\caption{Annual rainfall, from 1901 to 2012, for the Murray-Darling
  basin region of Australia.  The curve is fitted using the default
  loess smoother. The pointwise standard error bands assume that
  errors about the curve are independent; this is unlikely to be
  strictly true. To suppress these bands, specify
  \texttt{se=FALSE}.\label{fig:ggrain}}
\end{figure}

\begin{figure}[ht]
<<fig7_18e, fig.width=6, fig.height=3.25, out.width="0.8\\textwidth", warning=FALSE>>=
fig7.18()
@ %
\caption{Height versus weight, by sex, for Australian athletes in the
\texttt{ais} data set. Boxplots that show the distributions of heights,
and two-dimensional density contours have been
added.\label{fig:ggais}}

\end{figure}

\begin{suppfigure}
<<supp7_4e, fig.width=5.5, fig.height=3.25, out.width="0.8\\textwidth", warning=FALSE>>=
supp7.4()
@ %
\caption{Annual rainfall, from 1901 to 2012, for the Murray-Darling
  basin region of Australia.  Curves that estimate the 20\%, 50\% and 80\%
  quantiles have been fitted.\label{fig:ggrainpc}}
\end{suppfigure}

\begin{figure}[ht]
<<fig7_19e, fig.width=4.5, fig.height=3.5, out.width="0.8\\textwidth">>=
fig7.19()
@ %
\caption{Use \texttt{color} for distinguishing \texttt{sex}es,
\texttt{shape}s for \texttt{sport}s.}\label{fig:colshape}
\end{figure}


<<setup2, cache=FALSE, echo=FALSE>>=
library(knitr)
options(replace.assign=FALSE,width=72)

knit_hooks$set(par=function(before, options, envir){
if (before && options$fig.show!='none') par(mar=c(4,4,1.6,.1),
              cex.lab=.95,cex.axis=.9,mgp=c(2,.7,0),tcl=-.3)
}, rgl=function (before, options, envir) 
{
    if (before || rgl.cur() == 0) 
        return()
    if (!requireNamespace("knitr")) 
        stop("hook_rgl requires the 'knitr' package.")
    name <- knitr::fig_path("", options)
    par3d(windowRect = 100 + options$dpi * c(0, 0, options$fig.width, 
        options$fig.height))
    Sys.sleep(0.05)
    dir <- knitr::opts_knit$get("base_dir")
    if (is.character(dir)) {
        if (!file_test("-d", dir)) 
            dir.create(dir, recursive = TRUE)
        owd <- setwd(dir)
        on.exit(setwd(owd))
    }
    save_rgl(name, options$dev)
    if (!isTRUE(options$rgl.keepopen)) 
        rgl.close()
    options$fig.num = 1L
    knitr::hook_plot_custom(before, options, envir)
}, crop=knitr::hook_pdfcrop)
pdf.options(pointsize=12)
oldopt <- options(digits=4)
@ %

<<fig7_20, echo=TRUE, eval=doFigs>>=
fig7.20 <- function(){
## ---- rgl-demo ----
## The Rcmdr and rgl packages must be installed
if(!requireNamespace('rgl', quietly=TRUE))stop("Package 'rgl' must be available.")
if(!requireNamespace('car', quietly=TRUE))stop("Package 'car' must be available.")
if(!require(DAAG, quietly=TRUE))stop("Package 'DAAG' must be available.")
rgl::open3d()            # Precedes the call to par3d()
rgl::par3d(cex=0.75)     # Optional
                         # Other params: see help(par3d)
with(nihills, car::scatter3d(x=log(dist), y=log(climb),
                        z=log(time),
                        grid=FALSE,
                        surface=FALSE,
                        point.col="black",
                        axis.scales=FALSE))
}
@ %

<<supp7_5, echo=TRUE, eval=doFigs>>=
supp7.5 <- function(){
if(!require(googleVis))stop("Package 'googleVis' must be available.")
if(!exists("WorldBank"))stop("Requires dataset 'Worldbank' to be available.")
M <- gvisMotionChart(WorldBank, idvar="country",
          timevar="year",
          xvar="life.expectancy",
          yvar="fertility.rate",
          colorvar="region", sizevar="population",
          options=list(width=700, height=600))
## Now display the motion chart
plot(M)
}
@ %

<<fig7_20e, echo=TRUE, eval=doFigs>>=
fig7.20()
@ %

\begin{figure}
<<fig7_20e, echo=FALSE, fig.width=3.25, fig.height=3.25, eval=FALSE, out.width="0.65\\textwidth", warning=FALSE, message=FALSE>>=
@ %
\caption{Snapshot of 3-D dynamic display.}\label{fig:rgl-ex}
\end{figure}

\end{document}
